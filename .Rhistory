?left_join
data <- left_join(data, sub_wdata, c(""))
?rename
?setnames
?setname
sub_wdata <- rename(sub_wdata, "YearMonthDay" = "FL_DATE")
sub_wdata <- rename(sub_wdata, YearMonthDay = FL_DATE)
sub_wdata <- rename(sub_wdata, YearMonthDay = "FL_DATE")
?rename
sub_wdata <- rename(sub_wdata, FL_DATE = YearMonthDay)
data <- left_join(data, sub_wdata, by = c("FL_DATE", CallSign))
data <- left_join(data, sub_wdata, by = c("FL_DATE", "CallSign"))
data <- left_join(data, sub_wdata, by = c("FL_DATE"="FL_DATE", "CallSign"="CallSign"))
data <- left_join(data, sub_wdata, by = c("FL_DATE"="FL_DATE", "ORIGIN"="CallSign"))
names(wdata)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fullweatherdata.RData")load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/flightdata.rda")
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fullweatherdata.RData"); load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/flightdata.rda")
sum(unique(data$ORIGIN) != unique(data$DEST))
sum(unique(data$ORIGIN)
)
length(unique(data$ORIGIN))
length(unique(data$DEST))
unique(data$ORIGIN[!(data$ORIGIN %in% unique(data$DEST))])
# Read station data file to create WBAN to CallSign lookup
station <- read.table(unzip("QCLCD201411.zip", files="201411station.txt"),
header=TRUE, sep="|", quote="", comment.char="")
station.lookup <- station[,c(1,3)]
airports <- unique(data$ORIGIN) # Create factor vector of airports
sub_wdata <- filter(wdata, CallSign %in% airports) # Select only stations at airports
fields <- c(2, 23, 29, 31, 41, 43, 45, 51)
sub_wdata <- select(sub_wdata, fields)
?grep
arr_wdata <- sub_wdata
?paste
names(arr_wdata) <- paste("arr_", names(sub_wdata), sep="")
names(arr_wdata)
rm(arr_wdata)
m_wdata <- sub_wdata
names(m_wdata) <- paste("arr_", names(sub_wdata), sep="")
data <- left_join(data, m_wdata, by = c("FL_DATE"="arr_YearMonthDay", "DEST"="arr_CallSign"))
names(m_wdata) <- paste("dep_", names(sub_wdata), sep="")
data <- left_join(data, m_wdata, by = c("FL_DATE"="dep_YearMonthDay", "ORIGIN"="dep_CallSign"))
names(wdata)
# Subset weather data for airport stations
load("fullweatherdata.RData")
load("flightdata.rda")  # Load flight data
airports <- unique(data$ORIGIN) # Create factor vector of airports
sub_wdata <- filter(wdata, CallSign %in% airports) # Select only stations at airports
fields <- c(2, 23, 29, 31, 41, 43, 51)
sub_wdata <- select(sub_wdata, fields)
# Join weather data for departure and arrival airports to flight statistics
m_wdata <- sub_wdata
names(m_wdata) <- paste("dep_", names(sub_wdata), sep="")
data <- left_join(data, m_wdata, by = c("FL_DATE"="dep_YearMonthDay", "ORIGIN"="dep_CallSign"))
names(m_wdata) <- paste("arr_", names(sub_wdata), sep="")
data <- left_join(data, m_wdata, by = c("FL_DATE"="arr_YearMonthDay", "DEST"="arr_CallSign"))
?sample
t <- sample(5, data)
t <- sample(data, 5)
head(t)
t <- sample_n(data, 5)
t
t <- filter(data, dep_SnowFall > 0, arr_SnowFall > 0) %>% sample_n(size=5)
t
count(filter(sub_wdata, YearMonthDay = "2014-02-14", CallSign = "DTW"))
count(filter(sub_wdata, as.character(YearMonthDay) = "2014-02-14", CallSign = "DTW"))
count(filter(sub_wdata, YearMonthDay = as.POSIXct("2014-02-14"), CallSign = "DTW"))
class(sub_wdata$YearMonthDay)
class(as.character(sub_wdata$YearMonthDay))
date <- as.character(2014-02-14)
count(filter(sub_wdata, YearMonthDay = date, CallSign = "DTW"))
count(filter(sub_wdata, CallSign = "DTW"))
count(filter(sub_wdata, YearMonthDay == date, CallSign == "DTW"))
date
count(filter(sub_wdata, as.character(YearMonthDay) == "2014-02-14", CallSign == "DTW"))
filter(sub_wdata, as.character(YearMonthDay) == "2014-02-14", CallSign == "DTW")
filter(sub_wdata, as.character(YearMonthDay) == "2014-02-14", CallSign == "GRR")
filter(sub_wdata, as.character(YearMonthDay) == "2014-01-04", CallSign == "ORD")
sum(is.na(data$dep_CodeSum))
head(data[is.na(data$dep_CodeSum), c("ORIGIN", "DEST")])
sum("VPS" %in% wdata$CallSign)
?save
save(data, file = "fw_data.rda")
qplot(arr_SnowFall, ARR_DELAY, data=data)
library(ggplot2)
qplot(arr_SnowFall, ARR_DELAY, data=data)
t <- filter(data, dep_SnowFall > 0, arr_SnowFall > 0) %>% sample_n(size=5000)
t <- filter(data, dep_SnowFall > 0, arr_SnowFall > 0) %>% sample_n(size=5000)
qplot(arr_SnowFall, ARR_DELAY, data=t)
rm(t)
qplot(arr_SnowFall, ARR_DELAY, data=data)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/flightdata.rda")
library(dplyr)
test <- sample_n(data, size=5000)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
test <- sample_n(data, size=5000)
mutate(test, arr_tstorm = any(grep("TS", arr_CodeSum)))
?mutate
mutate(test, arr_tstorm = grep("TS", arr_CodeSum)==1))
mutate(test, arr_tstorm = grep("TS", arr_CodeSum)==1)
data$CodeSum[1:50]
data$arr_CodeSum[1:50]
any(grep("TS", arr_CodeSum[1:50]))
any(grep("TS", data$arr_CodeSum[1:50]))
library(stringr)
str_detect(data$arr_CodeSum[1:50], "TS")
mutate(test, arr_tstorm = str_detect(arr_CodeSum, "TS"))
mutate(data, arr_tstorm = str_detect(arr_CodeSum, "TS"))
library(dplyr)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
test <- sample_n(data, n=50000)
test <- sample_n(data, size=50000)
mutate(test, arr_tstorm = str_detect(arr_CodeSum, "TS"))
library("stringr", lib.loc="~/R/win-library/3.1")
mutate(test, arr_tstorm = str_detect(arr_CodeSum, "TS"))
test <- sample_n(data, size=100000)
mutate(test, arr_tstorm = str_detect(arr_CodeSum, "TS"))
nrow(data)
?mod
round(nrow(data)/100000,0)
?memory.limit
memory.size()
memory.limit(size=2000)
memory.limit(size=2000000)
memory.size()
memory.limit(size=2000000000)
memory.size()
mutate(data, arr_tstorm = str_detect(arr_CodeSum, "TS"))
memory.limit()
memory.limit(size=3000)
library(dplyr)
library(stringr)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
memory.size()
memory.limit(size=3000)
memory.size(max=NA)
memory.size()
memory.limit(size=4000)
data <- mutate(data, arr_tstorm = str_detect(arr_CodeSum, "TS"))
data <- mutate(data, arr_fog = str_detect(arr_CodeSum, "FG"))
data <- mutate(data, arr_rain = str_detect(arr_CodeSum, ("RA"|"SH")))
data <- mutate(data, arr_snow = str_detect(arr_CodeSum, ("SN"|"SG"|"PL"|"IC")))
?str_detect
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "apple")
str_detect("aecfg", letters)
?paste
data <- mutate(data, arr_rain = str_detect(arr_CodeSum, ("RA|SH")))
rm(data)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
data <- mutate(data, arr_tstorm = str_detect(arr_CodeSum, "TS"))
library(dplyr)
library(stringr)
data <- mutate(data, arr_tstorm = str_detect(arr_CodeSum, "TS"))
data <- mutate(data, arr_fog = str_detect(arr_CodeSum, "FG"))
data <- mutate(data, arr_rain = str_detect(arr_CodeSum, ("RA|SH")))
data <- mutate(data, arr_snow = str_detect(arr_CodeSum, ("SN|SG|PL|IC")))
data <- mutate(data, dep_tstorm = str_detect(dep_CodeSum, "TS"))
data <- mutate(data, dep_fog = str_detect(dep_CodeSum, "FG"))
data <- mutate(data, dep_rain = str_detect(dep_CodeSum, ("RA|SH")))
data <- mutate(data, dep_snow = str_detect(dep_CodeSum, ("SN|SG|PL|IC")))
names(data)
data[1:100, c(5,7,34,39,44:51)]
data[1:100, c(4,39,44:51)]
data[1:100, c(34,39,44:51)]
getwd()
setwd("./SourceData")
setwd("~/Personal/Coursera/DataProducts/CourseProject/SourceData")
save(file ="fw_data")
save(data, file ="fw_data")
?summarise
group_by(data, arr_tstorm, RESULT) %>% summarise(n=n()/sum(n))
group_by(data, arr_tstorm, RESULT) %>% summarise(n()/sum(n()))
group_by(data, arr_tstorm, RESULT) %>% summarise(n())
group_by(data, arr_tstorm, RESULT) %>% summarise(n=n())
group_by(data, arr_tstorm, RESULT) %>% summarise(RESULT, arr_tstorm=n())
group_by(data, arr_tstorm, RESULT) %>% summarise(arr_tstorm, RESTUL=n())
test <- sample_n(data, size=1000)
memory.size()
memory.limit(size=6000)
group_by(data, arr_tstorm, RESULT) %>% summarise(arr_tstorm, RESTUL=n())
group_by(data, arr_tstorm, RESULT) %>% summarise(arr_tstorm, RESULT=n())
group_by(test, arr_tstorm, RESULT) %>% summarise(RESULT=n())
test <- sample_n(data, size=1000)
group_by(test, arr_tstorm, RESULT) %>% summarise(RESULT=n())
group_by(test, arr_tstorm, RESULT) %>% summarise(n())
group_by(test, dep_tstorm, RESULT) %>% summarise(n())
group_by(test, dep_snow, RESULT) %>% summarise(n())
group_by(test, arr_snow, RESULT) %>% summarise(n())
setwd("~/Personal/Coursera/DataProducts/CourseProject/SourceData")
library("ggplot2", lib.loc="~/R/win-library/3.1")
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
library("dplyr", lib.loc="~/R/win-library/3.1")
subset <- sample_n(data, size=100000)
qplot(arr_snow, RESULT=="ontime", data=subset, geom_bar)
?filter
qplot(arr_snow, filter(subset, RESULT=="ontime"), data=subset, geom_bar)
ot <- group_by(subset, RESULT) %>%
summarise(n=n()) %>%
ot <- group_by(subset, arr_snow, RESULT) %>%
summarise(n=n()) %>%
n/sum(n)
ot <- group_by(subset, arr_snow, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ot
ggplot(ot, aes(color, x=arr_snow, y=n, fill=Result)) +
geom_bar(stat="identity", position = "fill") +
scale_fill_manual(values=c("#66CC66", "#996633", "#006699", "#CC0000")) +
scale_y_continuous(labels = percent_format())
library("scales", lib.loc="~/R/win-library/3.1")
ggplot(ot, aes(color, x=arr_snow, y=n, fill=Result)) +
geom_bar(stat="identity", position = "fill") +
scale_fill_manual(values=c("#66CC66", "#996633", "#006699", "#CC0000")) +
scale_y_continuous(labels = percent_format())
ggplot(ot, aes(color, x=arr_snow, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_fill_manual(values=c("#66CC66", "#996633", "#006699", "#CC0000")) +
scale_y_continuous(labels = percent_format())
ggplot(ot, aes(color, x=arr_snow, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, arr_snow, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_snow, y=n, fill=RESULT)) +
+     geom_bar(stat="identity", position = "fill") +
+     scale_y_continuous(labels = percent_format())
weather <- "arr_snow"
plotdata <- group_by(subset, weather, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=weather, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
weather <- subset$arr_snow
plotdata <- group_by(subset, weather, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=weather, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, arr_snow, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_snow, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, dep_snow, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=dep_snow, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
ggplot(plotdata, aes(color, x=arr_tstorm, y=n, fill=RESULT)) +
plotdata <- group_by(subset, arr_tstorm, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_tstorm, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, dep_tstorm, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=dep_tstorm, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, arr_fog, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_fog, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, dep_fog, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=dep_fog, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, arr_rain, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_rain, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, dep_rain, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=dep_rain, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
plotdata <- group_by(subset, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%")) %>%
plotdata <- group_by(subset, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
plotdata
plotdata <- group_by(subset, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%")) %>%
filter(RESULT="delayed")
plotdata <- group_by(subset, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%")) %>%
filter(RESULT=="delayed")
plotdata
summary(arr_AvgSpeed)
summary(data$arr_AvgSpeed)
qplot(data$arr_AvgSpeed, geom_boxplot)
qplot(subset$arr_AvgSpeed, geom_boxplot)
qplot(subset$arr_AvgSpeed, geom_histogram)
?cut
hist($subset$arr_AvgSpeed)
plot(arr_AvgSpeed, data=subset, geom_histogram)
qplot(arr_AvgSpeed, data=subset, geom_histogram)
hist(arr_AvgSpeed, data=subset)
hist(subset$arr_AvgSpeed)
library("Hmisc", lib.loc="~/R/win-library/3.1")
?cut2
?cut
bk <- c(5,10,15,20,25)
subset2 <- mutate(subset, arr_AvgWindGroups=cut(subset$arr_AvgSpeed, breaks=bk))
table(subset2$arr_AvgWindGroups)
subset2[1:50, c("arr_AvgSpeed", "arr_AvgWindGroups")]
bk <- c(5,10,15,20,25)
subset2 <- mutate(subset, arr_AvgWindGroups=cut2(subset$arr_AvgSpeed, breaks=bk))
subset2 <- mutate(subset, arr_AvgWindGroups=cut2(subset$arr_AvgSpeed, cuts=bk))
table(subset2$arr_AvgWindGroups)
plotdata <- group_by(subset2, arr_AvgWindGroups, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_AvgWindGroups, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
hist(subset$arr_Max5Speed)
subset2 <- mutate(subset, arr_AvgWindGroups=cut2(subset$arr_AvgSpeed, g=5))
plotdata <- group_by(subset2, arr_AvgWindGroups, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_AvgWindGroups, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
subset2 <- mutate(subset, arr_MaxWindGroups=cut2(subset$arr_Max5Speed, g=5))
plotdata <- group_by(subset2, arr_MaxWindGroups, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
ggplot(plotdata, aes(color, x=arr_MaxWindGroups, y=n, fill=RESULT)) +
geom_bar(stat="identity", position = "fill") +
scale_y_continuous(labels = percent_format())
qplot(arr_AvgSpeed, arr_Max5Speed, subset)
qplot(arr_AvgSpeed, arr_Max5Speed, data=subset)
?head
head(subset[RESULT=="delayed", "ARR_DELAY"], n=30
)
head(subset["RESULT"=="delayed", "ARR_DELAY"], n=30)
head(subset)
head(subset[,"ARR_DELAY"])
head(subset["RESULT"=="delayed", "ARR_DELAY"])
head(subset[RESULT=="delayed", "ARR_DELAY"])
head(subset[subset$RESULT=="delayed", "ARR_DELAY"])
head(subset[subset$ARR_DELAY>0,"RESULT"],n=20)
head(subset[subset$ARR_DELAY>0,c("ARR_DELAY", "RESULT"],n=20)
head(subset[subset$ARR_DELAY>0,c("ARR_DELAY", "RESULT")],n=20)
?mutate
subset2 <- mutate(subset2, ONTIME = (RESULT=="ontime"))
head(subset2[, c("RESULT", "ONTIME")],20)
names(subset2)
w_predictor <- names(subset2)[44:51]
w_predictor
subset2 <- mutate(subset2, ONTIME = (RESULT=="ontime"))
data <- mutate(data, ONTIME = (RESULT=="ontime"))
?glm
w_predictor
glm.fit <- glm(ONTIME ~ "arr_tstorm"+"arr_fog"+"arr_rain"+"arr_snow"+"dep_tstorm"+"dep_fog"+"dep_rain"+"dep_snow", data=data, family= binomial)
glm.fit <- glm(ONTIME ~ arr_tstorm+arr_fog+arr_rain+arr_snow+dep_tstorm+dep_fog+dep_rain+dep_snow, data=data, family= binomial)
summary(glm.fit)
subset <- sample_n(data, size=100000)
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
setwd("~/Personal/Coursera/DataProducts/CourseProject/SourceData")
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
data <- mutate(data, ONTIME = (RESULT=="ontime"))
library("dplyr", lib.loc="~/R/win-library/3.1")
data <- mutate(data, ONTIME = (RESULT=="ontime"))
save(data, file ="fw_data")
subset <- sample_n(save, size = 100000)
subset <- sample_n(data, size = 100000)
rm(data)
names(subset)
glm.fit <- glm(ORIGIN ~ arr_tstorm + arr_fog + arr_rain + arr_snow +
dep_tstorm + dep_fog + dep_rain + dep_snow, data=subset, family=binomial)
glm.fit <- glm(ONTIME ~ arr_tstorm + arr_fog + arr_rain + arr_snow +
dep_tstorm + dep_fog + dep_rain + dep_snow, data=subset, family=binomial)
summary(glm.fit)
shiny::runApp('~/Personal/Coursera/DataProducts/CourseProject/FlightDelay')
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
head(filter(data, arr_tstorm))
var = FALSE
head(filter(data, if(var = TRUE) arr_tstorm))
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
a=1
rm(1)
rm(a)
?vector
cbind
?cbind
codes <- c("Thunderstorm", "Snow", "Unknown")
DepWeatherCode <- vector(mode="factor", length = nrow(data))
ArrWeatherCode <- DepWeatherCode
DepWeatherCode <- vector(mode="character", length = nrow(data))
ArrWeatherCode <- DepWeatherCode
head(DepWeatherCode)
ArrWeatherCode <- "All"
ArrWeatherCode <- DepWeatherCode
ArrWeatherCode <- rep("All", nrow(data))
head(ArrWeatherCode)
DepWeatherCode <- rep("All", nrow(data))
ArrWeatherCode <- DepWeatherCode
head(ArrWeatherCode)
DepWeatherCode[data$dep_tstorm] <- "Thunderstorm"
head(DepWeatherCode, 20)
DepWeatherCode[data$dep_snow] <- "Snow"
ArrWeatherCode[data$arr_tstorm] <- "Thunderstorm"
ArrWeatherCode[data$arr_snow] <- "Snow"
cbind(data, DepWeatherCode, ArrWeatherCode)
help(memory.size)
help(memory.limit)
memory.limit(size = 4000)
getwd()
load("~/Personal/Coursera/DataProducts/CourseProject/SourceData/fw_data.rda")
library(dplyr)
DepWeatherCode <- rep("All", nrow(data))
ArrWeatherCode <- DepWeatherCode
DepWeatherCode[data$dep_tstorm] <- "Thunderstorm"
DepWeatherCode[data$dep_snow] <- "Snow"
ArrWeatherCode[data$arr_tstorm] <- "Thunderstorm"
ArrWeatherCode[data$arr_snow] <- "Snow"
cbind(data, DepWeatherCode, ArrWeatherCode)
data$DepWeatherCode <- DepWeatherCode
data$ArrWeatherCode <- ArrWeatherCode
names(data)
data[1:100, c(44,47,48,51,53,54)]
data <- data[,-c(53:54)]
DepWeatherCode <- rep("Other", nrow(data))
ArrWeatherCode <- DepWeatherCode
DepWeatherCode[data$dep_tstorm] <- "Thunderstorm"
DepWeatherCode[data$dep_snow] <- "Snow"
ArrWeatherCode[data$arr_tstorm] <- "Thunderstorm"
ArrWeatherCode[data$arr_snow] <- "Snow"
data$DepWeatherCode <- DepWeatherCode
memory.size(size=6000)
memory.limit(size=6000)
data$ArrWeatherCode <- ArrWeatherCode
names(dat)
names(data)
small <- data[,-c(1:3, 9, 10:17, 19:30, 34:52)] # Eliminate columns not required by app
airport <- c("ATL","BOS","BWI","CLT","DEN","DFW","DTW","EWR","IAH","JFK",
"LAS","LAX","LGA","MCO","MSP","ORD","PHX","SEA","SFO","SLC")
airline <- c("AA", "DL", "UA", "US", "WN")
small <- filter(small, UNIQUE_CARRIER %in% airline, ORIGIN %in% airport, DEST %in% airport)
# Adjust result so arrival delay > 12 hours are "cancelled"
for(i in 1:nrow(small)) if(!is.na(small$ARR_DELAY[i]) & small$ARR_DELAY[i] >= 12*60)
small$RESULT[i] = "cancelled"
small$RESULT <- factor(small$RESULT, levels(small$RESULT)[c(4,2,3,1)]) #Reorder for plotting
rm(data)
getwd()
save(small, file="smallfltdata.rda") # Save small for use by the application
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
stats <- group_by(day.data(), ORIGIN, DEST, UNIQUE_CARRIER, DEP_HOUR, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
stats <- data.frame(stats)
library(shiny)
library(ggplot2)
library(scales)
library(dplyr)
stats <- group_by(day.data(), ORIGIN, DEST, UNIQUE_CARRIER, DEP_HOUR, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
stats <- data.frame(stats)
input <- list(depcode = "DTW", arrcode = "LGA", carrier = "DL", depweather = "Other", arrweather = "Other")
day.data <- filter(small, ORIGIN == input$depcode,
DepWeatherCode == input$depweather,
DEST == input$arrcode,
ArrWeatherCode == input$arrweather,
UNIQUE_CARRIER == input$carrier
)
stats <- group_by(day.data, ORIGIN, DEST, UNIQUE_CARRIER, DEP_HOUR, RESULT) %>%
summarise(n=n()) %>%
mutate(freq = paste(round(100*n / sum(n),1),"%"))
stats <- data.frame(stats)
ggplot(stats, aes(ARR_DELAY)) + geom_histogram(binwidth = 15) +
scale_x_continuous(breaks = round(seq(0, max(stats$ARR_DELAY,
na.rm=TRUE), by = 60),1)) +
ggtitle("Delayed Flights Only: Delay in Minutes") +
xlab("Delay (Minutes)") +
ylab("Number of Flights")
ggplot(stats, aes(ARR_DELAY)) + geom_histogram(binwidth = 15)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library("shiny", lib.loc="~/R/win-library/3.1")
library("shinyapps", lib.loc="~/R/win-library/3.1")
?shinyapps()
getwd()
deployApp()
